Excellent, excellent! Contents follow.  -----  Good news, we got the paper in.   -jingwei  Thank you for your submission to IWPSE 2004. We are happy to inform you that your paper,  Evolution Spectrographs: Visualizing Punctuated Change in Software Evolution  has been accepted as FULL TECHNICAL PAPER to be included in the proceedings of the technical program. This year we received 27 paper submissions with a large portion of good papers among them. The competition was high and only 17 papers were finally accepted.  We enclose a set of reviews of your paper. Please make sure that in your preparation of the final paper you incorporate the suggestions of the reviewers.  You will receive an author kit from IEEE in the next couple of days. The page limit for full technical papers is 10 (TEN PAGES). Please note that the deadline for the camera-ready paper is June 28.  We look forward to seeing you this September in Kyoto.  Best regards, Harald Gall and Tsuneo Ajisaka IWPSE 2004 PC Co-Chairs                -~-~-~-~-~-~ start of review data ~-~-~-~-~-~-    Reviewer 1     Detailed evaluation:   Originality 4-high  Novelty 3-average  Evaluation 4-high  RelatedWork 3-average  Quality 4-high  ProblemFixing 3-average  JournalConsideration 3-average   Summary:   The paper studies the punctuation aspects of the evolution of sw systems. Punctuations are suddent and discontinuous changes in the evolution. The authors study the evolution of three open source systems with the help of the evolution spectographs and show cases of sudden changes in the system evolution.   Positive aspects:   very readable paper  empirical evidence with three case studies  spectographs reveal the eveolution of the system   Negative aspects:   changes may appaer as punctuaction because a large set of files have been committed in the repository at once. So, the evolution contain sudden changes that may be the result of a long and slow change process. Only at the moment of commit they become visile. The authors note this fact in the linux kernerl case study (page 8, sec 4.3). The question is: are all the major changes detected as punctuation or are there major changes in the system that are not visible as sudden changes ? The authors should bring evidence for the second case too. This should clarify what this technique can do and what cannot do.  Good approach for documenting the past but the developers already knew about these sudden changes. It's not clear what added value they can bring to the development or maintenance process. It would be helpful if the authors could elaborate more on this point.   Detailed comments:   Related work is good but the authors should clarify the contribution of the paper wrt the related work  Page 8 line 10, should be "outgoing" instead of "incoming"?                 -~-~-~-~-~-~-~-~-~-~-~--~-~-~-~-~-~-~-~-~-~-~-   Reviewer 2     Detailed evaluation:   Originality 3-average  Novelty 2-low  Evaluation 2-low  elatedWork 3-average  Quality 4-high  ProblemFixing 2-low  JournalConsideration 2-low  Summary:   A new visualization technique, called evolution spectrographs, is especially suitable for highlighting "punctuated" change---that is, a change that affects multiple components at the same time.   Positive aspects:   novel visualization technique  technique shows that evolution sometimes undergoes rapid changes   Negative aspects:   Who believes that software evolution is a continuous process?  Benefits of spectrographs (over other visualization techniques, or no visualization at all) not clear   Detailed comments:   My main concern with this paper starts at the first sentence: "It is commonly believed that software evolution is a slow process of incremental change."  Is this so?  I do not believe in slow incremental changes - in fact, I am well aware of big changes, such as integration of merges, before a final release, and therefore challenge the authors to provide claims for this statement - otherwise the first result of this paper, namely that software evolution is punctuated, becomes a non-result.  My second concern is that the individual punctuations should be qualitatively evaluated.  It may well be that global changes to source code, such as version bumps, license changes, or integration of meres, induce a punctuation without any effect on the actual executable. Please discuss.  I liked the spectrograph metaphor as a visualization that highlights punctuated changes and the fade out of their possible impact.  However, I am unable to tell whether this is better than a common bar chart.	You might just as well plot the number of changes per week, and thus visualize punctuation in a way that is easy to convey and understand. It may also be that other visualizations perform just as well.  Please give some evidence (or at least some argument) for why spectrographs are superior, possibly using examples.   Overall, despite the paper being clear and well-written, it fails to make its point.  I doubt that the visualization is superior to the state of the art, and I fail to see that evolution being "punctuated" comes as a surprise. The paper should present more evidence on these points.   Minor comments:   Lanza's evolution matrices actually have boxes with three (not two) dimensions: the color is also used.  The visualization suggests growth over time; however, files that have been deleted still occupy space.  Please discuss.  Although evolution of files may be superior to evolution of directories, why not being even more fine-grained and think about evolution of classes or methods?  See also the paper of Zimmerman et al on IWPSE 03.   Related work: See the work on GEVOL by Collberg et al, SOFTVIS 03                -~-~-~-~-~-~-~-~-~-~-~--~-~-~-~-~-~-~-~-~-~-~-   Reviewer 3     Detailed evaluation:   Originality 4-high  Novelty 5-very high  Evaluation 3-average  RelatedWork 3-average  Quality 4-high  ProblemFixing 5-very high  JournalConsideration 5-very high   Summary:   This paper proposes a software visualisation technique called Evolution Spectrographs and uses it to highlight discontinuities in the evolution trend of three Open Source systems.  Positive aspects:   Interested topic and results  Clearly written  Paper well structured  Very relevant to IWPSE   Negative aspects:   More credit should be given to authors who have pointed out the emergence of discontinuities in software evolution  Proceedings will be printed in black & white,  but the paper uses colors extensively  Slightly over the page limit (11 pages, when maximum is 10 pages)   Detailed comments:   This is an interesting and well-written paper reporting on research which is relevant to IWPSE.  The theme of discontinuous change in software evolution and the paper could give more credit to other authors which have published results in the topic.  There are some references to Biology in the paper but the conection with the Software Evolution theme is not clear. Moreover, one can argue that the relationships between Biological evolution and Software Evolution are many.  References   You can use the following reference to Anton and Potts work, instead of the one you quoted, which is an unknown source: Anton A. & Potts C. (2001); Functional Paleontology: System Evolution as the User Sees It, Proc. 23rd Intl. Conference on Software Engineering, ICSE 23, Toronto, Canada, 12-19 May 2001: 421  430                -~-~-~-~-~-~-~-~-~-~-~--~-~-~-~-~-~-~-~-~-~-~-