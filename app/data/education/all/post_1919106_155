Ok, it just dawned on me that I don't need to give up clickability on my software when transitioning to tk. That is because the code I'm currently using implements its own event handlers, so I can just port that code over to its tk equivalent. Ergo. All I have to worry about then is layout management. I even figured that I can use a single canvas and have all cells painted on it. Sure, it will be close to trying to emulate an FXTable in tk, but at least I will be able to properly document my interfaces (don't get me started on the horror that is FXRuby documentation).  I got the draft in from Jingwei, and it looks pretty good. He did his own implementation in Java (basing the coloring algorithms on mine), but he says that my software is still faster, which I don't doubt. Java is the king of suckiness. Well, maybe the Queen - VB is pretty bad too. Either way, Java's a bitch to work with. But I digress. Jingwei had some neat sorting in his code, in which he sorted the files by earliest appearance instead of alphabetically. I guess that makes sense for what he needs to demonstrate. But what I'm really interested in is the database files he has, because he's not only using my OpenSSH DB, but also some he created himself (or that someone else created for him) for PostgreSQL and GNU/Linux, which are both about 2-3 times as large. I want to get a hand on those to see how fast my code goes with larger databases and if needed improve some of my algorithms. Sure, I can fake a DB, but that's beyond the point.  My advisor sent me an e-mail with the "Future Work" thesis section of one of her previous students, to see if I can use some of it for my own thesis, and lo and behold, quite a lot of it matches my interests. This of course brings up a small dilemma, because I've started to get hooked on this software evolution thing, so I might go careening down a completely different track. Right now I'm thinking of staying away from anything AI-based because I've had very little to do with it as far as courses go, and Software Architecture is one of my strong points anyway, and I've had my fair share of experience in it. Another thing that I may get into is writing up some advanced clustering tools, but I'd have to come up with something that is unique.  One way or another, I need to go to sleep, my brain's been redlining since I woke up and I haven't had that much sugar to start with. If I don't rest then I'm going to burn out soon. So ciao everyone, and remember, "All work and no play makes Jack a dull boy".