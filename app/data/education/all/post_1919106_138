Ignore this unless you're a Ruby developer and are eating your own brain out trying to set the color for a singe cell   I just need to write thsi down before the information leaks out of my ears.  Some background: the method  urlLink Fox::FXTable::setCellcolor(  row, col, color )   is weird - it does not let you set the color for a single cell, as one would infer from the name, but for rows and columns of cells only. So there have been several people wondering about this, and I myself am in dire need of that sort of functionality, so I did some inverstigative work to try to figure out if there is some way to do it other than overriding that method. So here's what I found after some rummaging:  I can get the cell in question with  urlLink Fox::FXTable::getItem(  row, col  ) . The cell is an  FXTableItem . I should then be able to set its color with  urlLink Fox::FXTableItem::drawBackground(  table, dc, x, y, w, h  ) . Now I know how to get  table  because it's the parent that the cell is in and that's already defined. I know how to get  h  and  w  (from the  FXTableItem  methods  urlLink getHeight(  table  )  and  urlLink getWidth(  table  ) . I can get  x  and  y  because they're the coordinates of the item in the table, and I would know that beforehand. And I'm pretty sure that  dc  is a  urlLink FXDC   object. But I still need to figure out how to set it up. I'm thinking that I need to be using the  FILL_SOLID  fill style. And the color would probably be a decimal RGB setting, because that's what is used everywhere else on the examples.  ----  Update  Ok, that doesn't work. First,  x  and  y  have to be the actual pixel coordinates. Those I can get with  Fox::FXTable::getColumnX  and  Fox::FXTable::getRowY , but  drawBackground  still craps out on me. I have come to a dead end more or less. Documentation is sparse, so my only hope is that someone on their mailing list/forum qill answer to my pleas. As alternatives, I could fill the cell with an icon (a graphic) but that is sort of crude, or I could use colored text. Neither are really good options.