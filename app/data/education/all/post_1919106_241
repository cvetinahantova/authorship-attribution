I find it amusing that  urlLink these   urlLink two  newspieces were posted head to head on  urlLink Fark .   Also there's all these  urlLink complaints  about the Google IPO. You'll have to excuse me for not chiming in. I thought that Google had made it clear in their initial announcement that the IPO deal was not designed to profit the shareholders, but to provide an opportunity to invest in a high-risk deal. Boo-hoo for you, mister economist, but I think that their actions couldn't be better. Someone had to have the balls to go and try new things, and if there's a solid company backing it, then the better. And in the long run, it  will  be better for Google. They got where they are now by being innovative and staying one step ahead. If they settle now and focus on just making money they will soon be overrun by the stampede of companies behind that are just itching to get their foot into the lead. Similarly, I do not whine about their policy regarding scanning Gmail e-mails for advertisement. The scan has to be done anyway for their search and indexing service, and all they did was turn it into an unobtrusive service that boosts their earnings. Or would you rather have them attach 3 paragraphs of advertisements onto each e-mail like other free services do?   When reading articles like  urlLink this one , I can only shake my head skeptically. While the idea to debug code in plain english is laudable, it is not a magic tool that replaces proper design, unit testing, &c. More importantly, the tool is of little use to professional developers. Domain-specific solutions to design-time debugging are more appropriate than a tool for release-time debugging. And from the description of the program, I have my doubts as to how well it works with fully reflective languages. I would prefer source code transformation tools that allow the programmer to abstract compounds within the code, and that guarantee that these abstractions are both atomic and reliable.