I spent more than was planned on the programming assignment for Algorithms. I have everything working, except for one teeny little bit, which I just now figured out:  Y'see, the last part of the assignment is to implement Hirschberg's linear space algorithm for finding the longest common subsequence (LCS) of two strings. Which I have implement, but for one part: the place on the middle array where the longest path crosses it. The problem was that there is only one paper that describes how that is done, and in a very cryptic way. So I was banging my head against the wall all weekend, trying to figure it out. And today, when I woke up, it hit me (not the wall): What I need to do is traverse the middle list and for each element find the LCS length of what's up and to the left, and of what's down and to the right. The element where these sum up to be equal to the total LCS is one of the possible crossing paths, and that's where the rest of my program works doodly-well.  So, knowing that, I can finally dedicate some time to other things that I have neglected: The other assignment that's due tomorrow, and the readings for  urlLink MPLSA . That'll keep me busy until next week, where I'll have to start worrying about the next batch of assignments that I have to grade rolling in from Operating Systems.