mark(digging-2, While-1)
advcl(came-19, digging-2)
prep(digging-2, through-3)
det(e-mail-5, the-4)
pobj(through-3, e-mail-5)
nsubj(accumulating-9, that-6)
aux(accumulating-9, has-7)
aux(accumulating-9, been-8)
rcmod(e-mail-5, accumulating-9)
prep(accumulating-9, in-10)
poss(inbox-12, my-11)
pobj(in-10, inbox-12)
det(days-16, these-13)
amod(days-16, last-14)
amod(days-16, few-15)
tmod(accumulating-9, days-16)
nsubj(came-19, I-18)
root(ROOT-0, came-19)
prep(came-19, upon-20)
pobj(upon-20, one-21)
prep(came-19, from-22)
poss(TA-24, my-23)
pobj(from-22, TA-24)
prep(TA-24, for-25)
nn(Architecture-27, Software-26)
pobj(for-25, Architecture-27)

nsubj(working-3, He-1)
aux(working-3, 's-2)
root(ROOT-0, working-3)
prep(working-3, on-4)
det(paper-6, a-5)
pobj(on-4, paper-6)
prep(paper-6, for-7)
pobj(for-7, color-encoding-8)
prep(color-encoding-8, of-9)
nn(changes-12, software-10)
nn(changes-12, project-11)
pobj(of-9, changes-12)
cc(working-3, and-14)
conj(working-3, wants-15)
dobj(wants-15, me-16)
aux(co-author-18, to-17)
xcomp(wants-15, co-author-18)
poss(paper-20, his-19)
dobj(co-author-18, paper-20)

nsubj(nice-4, That-1)
aux(nice-4, will-2)
cop(nice-4, be-3)
root(ROOT-0, nice-4)
mark(get-9, as-6)
nsubj(get-9, I-7)
aux(get-9, 'll-8)
advcl(nice-4, get-9)
det(publication-12, an-10)
amod(publication-12, extra-11)
dobj(get-9, publication-12)
prep(get-9, in-13)

prep(working-9, On-1)
det(hand-4, the-2)
amod(hand-4, other-3)
pobj(On-1, hand-4)
nsubj(working-9, I-6)
aux(working-9, 've-7)
aux(working-9, been-8)
root(ROOT-0, working-9)
prep(working-9, on-10)
poss(project-13, my-11)
amod(project-13, old-12)
pobj(on-10, project-13)
dep(working-9, trying-15)
advmod(trying-15, again-16)
aux(enable-18, to-17)
xcomp(trying-15, enable-18)
amod(coloring-21, individual-19)
nn(coloring-21, cell-20)
dobj(enable-18, coloring-21)

advmod(now-2, Right-1)
advmod(use-5, now-2)
nsubj(use-5, I-3)
aux(use-5, can-4)
root(ROOT-0, use-5)
advmod(color-8, only-6)
num(color-8, one-7)
dobj(use-5, color-8)
cc(use-5, and-10)
nsubj(occurred-13, it-11)
advmod(occurred-13, just-12)
conj(use-5, occurred-13)
prep(occurred-13, to-14)
pobj(to-14, me-15)
mark(using-20, that-16)
det(cell-18, the-17)
nsubj(using-20, cell-18)
aux(using-20, is-19)
ccomp(occurred-13, using-20)
det(table-22, the-21)
poss(color-24, table-22)
possessive(table-22, 's-23)
dobj(using-20, color-24)
prep(using-20, as-25)
det(base-27, a-26)
pobj(as-25, base-27)
nsubj(bad-32, which-29)
aux(bad-32, would-30)
cop(bad-32, be-31)
dep(base-27, bad-32)
mark(use-39, because-34)
advmod(use-39, then-35)
nsubj(use-39, I-36)
aux(use-39, could-37)
neg(use-39, n't-38)
advcl(bad-32, use-39)
amod(colors-41, different-40)
dobj(use-39, colors-41)
prep(use-39, for-42)
amod(cells-44, different-43)
pobj(for-42, cells-44)

prep(thinking-7, On-1)
det(hand-4, the-2)
amod(hand-4, other-3)
pobj(On-1, hand-4)
nsubj(thinking-7, I-5)
aux(thinking-7, was-6)
root(ROOT-0, thinking-7)
prep(thinking-7, of-8)
pcomp(of-8, taking-9)
det(approach-13, an-10)
advmod(different-12, entirely-11)
amod(approach-13, different-12)
dobj(taking-9, approach-13)
cc(approach-13, and-14)
nn(drawings-16, use-15)
conj(approach-13, drawings-16)
cc(thinking-7, and/or-17)
num(objects-19, 3D-18)
npadvmod(instead-20, objects-19)
conj(thinking-7, instead-20)
dep(of-23, both-22)
nsubjpass(supported-26, of-23)
pobj(of-23, which-24)
auxpass(supported-26, are-25)
ccomp(instead-20, supported-26)
prep(supported-26, by-27)
pobj(by-27, FXRuby-28)

nsubj(messed-4, I-1)
aux(messed-4, 've-2)
advmod(messed-4, already-3)
root(ROOT-0, messed-4)
prep(messed-4, around-5)
det(bit-7, a-6)
pobj(around-5, bit-7)
prep(bit-7, with-8)
pobj(with-8, drawings-9)
cc(messed-4, and-11)
conj(messed-4, did-12)
det(clock-17, a-13)
amod(clock-17, simple-14)
nn(clock-17, urlLink-15)
nn(clock-17, binary-16)
dobj(did-12, clock-17)
cc(urlLink-21, and-19)
det(urlLink-21, a-20)
dep(clock-17, urlLink-21)
advmod(version-23, funky-22)
amod(urlLink-21, version-23)
nsubj(worked-27, both-26)
dep(clock-17, worked-27)
prep(worked-27, for-28)
pobj(for-28, me-29)
prep(worked-27, with-30)
det(FXRuby-32, the-31)
pobj(with-30, FXRuby-32)
vmod(FXRuby-32, supplied-33)
prep(supplied-33, by-34)
det(installer-39, the-35)
nn(installer-39, Windows-36)
nn(installer-39, Ruby-37)
nn(installer-39, 1.8-38)
pobj(by-34, installer-39)
cc(worked-27, but-41)
nsubj(work-44, they-42)
aux(work-44, should-43)
conj(worked-27, work-44)
advmod(work-44, even-45)
prep(work-44, on-46)
pobj(on-46, Linux-47)

advmod(write-5, Now-1)
nsubj(write-5, I-2)
aux(write-5, should-3)
advmod(write-5, probably-4)
root(ROOT-0, write-5)
prt(write-5, up-6)
det(classes-8, some-7)
dobj(write-5, classes-8)
aux(make-10, to-9)
vmod(write-5, make-10)
det(transition-12, the-11)
nsubj(go-13, transition-12)
ccomp(make-10, go-13)
acomp(go-13, smooth-14)
nsubj(comes-22, something-16)
aux(parse-18, to-17)
vmod(something-16, parse-18)
dobj(parse-18, arrays-19)
prep(parse-18, into-20)
pobj(into-20, images-21)
parataxis(write-5, comes-22)
prep(comes-22, to-23)
poss(mind-25, my-24)
pobj(to-23, mind-25)

det(advantage-2, Another-1)
nsubj(is-3, advantage-2)
root(ROOT-0, is-3)
mark(depend-8, that-4)
nsubj(depend-8, I-5)
aux(depend-8, wo-6)
neg(depend-8, n't-7)
ccomp(is-3, depend-8)
dep(more-10, any-9)
advmod(depend-8, more-10)
prep(depend-8, on-11)
det(class-14, the-12)
nn(class-14, FXTable-13)
pobj(on-11, class-14)
mark(lose-20, albeit-16)
nsubj(lose-20, I-17)
aux(lose-20, 'll-18)
advmod(lose-20, also-19)
advcl(depend-8, lose-20)
dobj(lose-20, some-21)
prep(some-21, of-22)
poss(advantages-24, its-23)
pobj(of-22, advantages-24)
amod(cells-27, clickable-26)
dep(emulate-33, cells-27)
conj(cells-27, etc-29)
nsubj(emulate-33, I-31)
aux(emulate-33, can-32)
dep(advantages-24, emulate-33)
dobj(emulate-33, them-34)
cc(emulate-33, but-36)
nsubj(take-39, it-37)
aux(take-39, 'll-38)
conj(emulate-33, take-39)
predet(effort-42, quite-40)
det(effort-42, some-41)
dobj(take-39, effort-42)

prep(could-6, On-1)
det(hand-4, the-2)
amod(hand-4, other-3)
pobj(On-1, hand-4)
nsubj(could-6, I-5)
root(ROOT-0, could-6)
cc(using-18, and-8)
aux(make-10, to-9)
xcomp(using-18, make-10)
nsubj(easier-12, it-11)
xcomp(make-10, easier-12)
prep(make-10, on-13)
pobj(on-13, Jingwei-14)
aux(using-18, should-16)
aux(using-18, be-17)
dep(could-6, using-18)
dobj(using-18, tk-19)
advmod(of-21, instead-20)
prep(tk-19, of-21)
pobj(of-21, Fox-22)
mark(delay-28, so-24)
nsubj(delay-28, I-25)
aux(delay-28, might-26)
advmod(delay-28, just-27)
advcl(using-18, delay-28)
dobj(delay-28, production-29)
mark(got-32, until-30)
nsubj(got-32, I-31)
advcl(delay-28, got-32)
det(hang-34, a-33)
dobj(got-32, hang-34)
prep(hang-34, of-35)
pobj(of-35, tk-36)

