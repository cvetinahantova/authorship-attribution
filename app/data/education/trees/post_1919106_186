det(visitor-3, A-1)
amod(visitor-3, recent-2)
nsubj(asked-21, visitor-3)
prep(visitor-3, on-4)
det(list-8, the-5)
nn(list-8, Ruby-6)
nn(list-8, mailing-7)
pobj(on-4, list-8)
nsubj(seems-11, who-10)
dep(visitor-3, seems-11)
dep(had-14, to-12)
nsubj(had-14, me-13)
ccomp(seems-11, had-14)
det(background-19, a-15)
nn(background-19, C/C-16)
nn(background-19, +-17)
nn(background-19, +-18)
dobj(had-14, background-19)
root(ROOT-0, asked-21)
advmod(false-28, why-22)
prep(false-28, in-23)
pobj(in-23, Ruby-24)
num(Ruby-24, zero-25)
cop(false-28, was-26)
neg(false-28, not-27)
ccomp(asked-21, false-28)

nsubj(sparked-2, This-1)
root(ROOT-0, sparked-2)
det(comments-4, some-3)
dobj(sparked-2, comments-4)
cc(sparked-2, but-6)
advmod(considered-18, as-7)
prep(as-7, of-8)
det(time-10, the-9)
pobj(of-8, time-10)
prep(time-10, of-11)
nsubj(reading-13, me-12)
pcomp(of-11, reading-13)
dobj(reading-13, it-14)
neg(one-16, no-15)
nsubj(considered-18, one-16)
aux(considered-18, had-17)
conj(sparked-2, considered-18)
poss(ancestry-21, Ruby-19)
possessive(Ruby-19, 's-20)
dobj(considered-18, ancestry-21)

nsubj(borrows-2, Ruby-1)
root(ROOT-0, borrows-2)
amod(concepts-5, many-3)
amod(concepts-5, good-4)
dobj(borrows-2, concepts-5)
prep(concepts-5, from-6)
pobj(from-6, languages-7)
dep(over-9, all-8)
prep(borrows-2, over-9)
det(board-11, the-10)
pobj(over-9, board-11)

nsubjpass(done-3, That-1)
auxpass(done-3, was-2)
root(ROOT-0, done-3)
prep(done-3, on-4)
pobj(on-4, purpose-5)
cc(done-3, and-7)
conj(done-3, done-8)
advmod(well-10, very-9)
advmod(done-8, well-10)
nsubj(say-13, I-11)
aux(say-13, would-12)
dep(well-10, say-13)

num(languages-2, Two-1)
nsubj(Smalltalk-8, languages-2)
nsubj(influenced-5, that-3)
advmod(influenced-5, heavily-4)
rcmod(languages-2, influenced-5)
dobj(influenced-5, Ruby-6)
cop(Smalltalk-8, were-7)
root(ROOT-0, Smalltalk-8)
cc(Smalltalk-8, and-9)
conj(Smalltalk-8, Scheme-10)

advmod(had-5, Now-1)
num(Scheme-4, one-3)
nsubj(had-5, Scheme-4)
root(ROOT-0, had-5)
det(idea-8, the-6)
amod(idea-8, following-7)
dobj(had-5, idea-8)
nsubj(true-12, Everything-10)
cop(true-12, is-11)
parataxis(had-5, true-12)
prep(true-12, except-13)
pobj(except-13, false-14)

root(ROOT-0, More-1)
prep(More-1, on-2)
pobj(on-2, this-3)
advmod(this-3, later-4)
cc(later-4, but-6)
conj(later-4, first-7)
prep(More-1, to-8)
pobj(to-8, C-9)
advmod(true-14, where-11)
nsubj(true-14, zero-12)
cop(true-14, is-13)
dep(More-1, true-14)
nsubj(recall-17, I-16)
dep(More-1, recall-17)
nn(Michaud-19, Dr.-18)
dobj(recall-17, Michaud-19)
vmod(Michaud-19, talking-20)
prep(talking-20, about-21)
advmod(false-27, why-22)
nsubj(false-27, zero-23)
cop(false-27, was-24)
det(false-27, a-25)
amod(false-27, convenient-26)
pcomp(about-21, false-27)
prep(false-27, in-28)
pobj(in-28, C-29)
advmod(say-36, well-31)
nsubj(say-36, he-33)
aux(say-36, did-34)
neg(say-36, n't-35)
parataxis(recall-17, say-36)
advmod(that-38, exactly-37)
dep(say-36, that-38)
cc(went-41, but-40)
dep(that-38, went-41)
prt(went-41, on-42)
prep(went-41, about-43)
det(talk-46, a-44)
amod(talk-46, nice-45)
pobj(about-43, talk-46)
prep(went-41, on-47)
advmod(is-50, why-48)
expl(is-50, there-49)
pcomp(on-47, is-50)
neg(type-55, no-51)
nn(type-55, bit-53)
nsubj(is-50, type-55)
prep(type-55, in-56)
pobj(in-56, C-57)
cc(say-36, and-59)
nsubjpass(applied-63, that-60)
aux(applied-63, can-61)
auxpass(applied-63, be-62)
conj(say-36, applied-63)
advmod(applied-63, here-64)
nsubj(is-68, this-67)
parataxis(recall-17, is-68)
mark(integer-73, because-69)
nsubj(integer-73, zero-70)
cop(integer-73, is-71)
det(integer-73, an-72)
advcl(is-68, integer-73)
cc(recall-17, and-75)
nsubjpass(fit-80, integers-76)
aux(fit-80, can-77)
auxpass(fit-80, be-78)
advmod(fit-80, nicely-79)
conj(recall-17, fit-80)
prep(fit-80, into-81)
det(byte/word-83, a-82)
pobj(into-81, byte/word-83)

amod(values-3, Boolean-1)
nn(values-3, true/false-2)
nsubj(need-9, values-3)
prep(values-3, on-4)
det(hand-7, the-5)
amod(hand-7, other-6)
pobj(on-4, hand-7)
aux(need-9, would-8)
root(ROOT-0, need-9)
quantmod(bit-12, only-10)
quantmod(bit-12, a-11)
dobj(need-9, bit-12)
cc(need-9, but-14)
aux(need-16, would-15)
conj(need-9, need-16)
det(byte/word-18, a-17)
dobj(need-16, byte/word-18)
aux(allocated-21, to-19)
auxpass(allocated-21, be-20)
vmod(byte/word-18, allocated-21)
advmod(allocated-21, anyway-22)

nsubj(waste-5, This-1)
cop(waste-5, is-2)
det(waste-5, a-3)
amod(waste-5, huge-4)
root(ROOT-0, waste-5)
prep(waste-5, of-6)
nn(space-8, allocation-7)
pobj(of-6, space-8)
nsubj(resource-19, which-10)
dep(long-13, not-11)
advmod(long-13, so-12)
advmod(resource-19, long-13)
dep(long-13, ago-14)
cop(resource-19, was-15)
det(resource-19, a-16)
advmod(resource-19, quite-17)
amod(resource-19, precious-18)
rcmod(space-8, resource-19)

cc(do-5, Plus-1)
nsubj(do-5, integers-3)
aux(do-5, can-4)
root(ROOT-0, do-5)
predet(things-9, all-6)
det(things-9, these-7)
amod(things-9, nifty-8)
dobj(do-5, things-9)
prep(things-9, like-11)
nn(factorial-16, addition-12)
dep(factorial-16, substraction-14)
pobj(like-11, factorial-16)
cc(like-11, and-18)
advmod(on-20, so-19)
conj(like-11, on-20)
cc(on-20, and-21)
advmod(forth-23, so-22)
conj(on-20, forth-23)

mark(integer-7, Since-1)
nsubj(integer-7, zero-2)
cop(integer-7, is-3)
det(integer-7, the-4)
amod(integer-7, nicest-5)
amod(integer-7, non-positive-6)
advcl(makes-10, integer-7)
nsubj(makes-10, it-9)
root(ROOT-0, makes-10)
advmod(sense-12, just-11)
dobj(makes-10, sense-12)
aux(use-14, to-13)
vmod(sense-12, use-14)
nsubj(false-17, it-15)
advmod(false-17, as-16)
xcomp(use-14, false-17)

nsubj(takes-3, It-1)
advmod(takes-3, also-2)
root(ROOT-0, takes-3)
det(effort-6, the-4)
amod(effort-6, least-5)
dobj(takes-3, effort-6)
aux(represent-8, to-7)
xcomp(takes-3, represent-8)
dep(takes-3, so-10)
nsubj(better-13, it-11)
cop(better-13, 's-12)
parataxis(takes-3, better-13)
prep(better-13, at-14)
cop(false-16, being-15)
pcomp(at-14, false-16)
prep(false-16, than-17)
det(number-20, a-18)
amod(number-20, negative-19)
pobj(than-17, number-20)
cc(better-13, and-22)
aux(encompass-25, does-23)
neg(encompass-25, n't-24)
conj(better-13, encompass-25)
det(range-28, an-26)
amod(range-28, entire-27)
dobj(encompass-25, range-28)

discourse(back-2, Now-1)
root(ROOT-0, back-2)
prep(back-2, to-3)
pobj(to-3, Ruby-4)

prep(subtype-8, In-1)
pobj(In-1, Ruby-2)
nsubj(subtype-8, integers-4)
cop(subtype-8, are-5)
advmod(subtype-8, just-6)
det(subtype-8, another-7)
root(ROOT-0, subtype-8)
prep(subtype-8, of-9)
pobj(of-9, objects-10)

cc(considered-15, And-1)
advmod(considered-15, why-2)
aux(considered-15, should-3)
det(something-7, an-4)
nn(something-7, object-5)
nsubjpass(considered-15, something-7)
mark(given-11, that-8)
aux(given-11, has-9)
auxpass(given-11, been-10)
ccomp(considered-15, given-11)
dobj(given-11, metadata-12)
auxpass(considered-15, be-14)
root(ROOT-0, considered-15)
xcomp(considered-15, false-16)

nsubj(make-4, It-1)
aux(make-4, does-2)
neg(make-4, n't-3)
root(ROOT-0, make-4)
dobj(make-4, sense-5)

advmod(makes-4, Effectively-1)
nsubj(makes-4, this-3)
root(ROOT-0, makes-4)
nsubj(true-8, everything-5)
prep(everything-5, except-6)
pobj(except-6, false-7)
xcomp(makes-4, true-8)

cc('s-3, But-1)
expl('s-3, there-2)
root(ROOT-0, 's-3)
acomp('s-3, more-4)

prep(false-11, In-1)
pobj(In-1, Ruby-2)
advmod(in-5, as-4)
prep(false-11, in-5)
pobj(in-5, Scheme-6)
nsubj(false-11, nil-8)
cop(false-11, is-9)
advmod(false-11, also-10)
root(ROOT-0, false-11)

nsubj(follows-2, This-1)
root(ROOT-0, follows-2)
advmod(follows-2, directly-3)
prep(follows-2, from-4)
det(definition-7, the-5)
amod(definition-7, previous-6)
pobj(from-4, definition-7)
prep(definition-7, of-8)
pobj(of-8, false-9)
mark(something-15, because-11)
nsubj(something-15, nil-12)
cop(something-15, is-13)
neg(something-15, not-14)
advcl(follows-2, something-15)
cc(follows-2, and-17)
advmod(belong-21, therefore-18)
aux(belong-21, does-19)
neg(belong-21, not-20)
conj(follows-2, belong-21)
prep(belong-21, to-22)
pobj(to-22, everything-23)

cc(story-5, And-1)
nsubj(story-5, that-2)
cop(story-5, is-3)
det(story-5, the-4)
root(ROOT-0, story-5)
prep(story-5, on-6)
advmod(false-13, why-7)
advmod(false-9, only-8)
nsubj(false-13, false-9)
cc(false-9, and-10)
conj(false-9, nil-11)
cop(false-13, are-12)
pcomp(on-6, false-13)
prep(false-13, in-14)
pobj(in-14, Ruby-15)

